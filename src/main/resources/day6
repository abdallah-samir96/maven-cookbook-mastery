- Java Development with Maven

- Maven is primarily a build tool for Java projects.
- The default type of artifact generated by Maven is JAR. If the packaging element is absent, or specified as jar.
- The package option is part of Maven's default lifecycle. When Maven is run with the package
  option, it runs all the phases up to and prior to it, in order. Maven first compiles the project,
  runs the tests, and then, based on the packaging type, invokes the suitable plugin to package.
  In our case, as we specified the packaging as jar, Maven used the jar goal of the Maven
  JAR plugin to create a JAR artifact in the target folder.

- to create executable jar file
<build>
    <plugins>
        <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-jar-plugin</artifactId>
            <version>2.6</version>
            <configuration>
                <archive>
                    <manifest>
                        <addClasspath>true</addClasspath>
                        <mainClass>com.packt.cookbook.App</mainClass>
                        <classpathPrefix>dependency</classpathPrefix>
                    </manifest>
                </archive>
            </configuration>
        </plugin>
    </plugins>

    <!-- This plugin is used to copy the dependencies to specific location default in (target/dependency) -->
    <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>2.9</version>
        <executions>
                <execution>
                <id>copy-dependencies</id>
                <phase>package</phase>
                <goals>
                    <goal>copy-dependencies</goal>
                </goals>
                <configuration>
                    <outputDirectory>${project.build.directory}</outputDirectory>
                    <excludeArtifactIds>junit</excludeArtifactIds>
                </configuration>
            </execution>
        </executions>
    </plugin>

</build>
- classpathPrefix in jar plugin to determine the the directory of the jar files.
- mvn clean package
- java -jar project-with-executable-jar-1.0-SNAPSHOT.jar

** Generating a JAR of the source code

- source jsr is useful when using IDE to debug the code, so on
- maven-source-plugin used to generate jar file containing the source code
<build>
    <plugins>
        <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-source-plugin</artifactId>
            <version>2.4</version>
            <executions>
                <execution>
                    <id>attach-sources</id>
                    <phase>package</phase>
                    <goals>
                        <goal>jar-no-fork</goal>
                    </goals>
                </execution>
            </executions>
        </plugin>
    </plugins>
</build>

- mvn source:jar to generate jar of sources
- jar-no-fork goal
    Description: This goal bundles all the sources into a jar archive. This
      goal functions the same as the jar goal but does not fork the build and is
      suitable for attaching to the build lifecycle.
    Implementation: org.apache.maven.plugins.source.SourceJarNoForkMojo
    Language: java
    Bound to phase: package

- to generate documentation jar file beside the classes jar file
- <plugin>
      <groupId>org.apache.maven.plugins</groupId>
      <artifactId>maven-javadoc-plugin</artifactId>
      <version>2.10.1</version>
      <executions>
          <execution>
          <id>attach-javadocs</id>
          <phase>package</phase>
          <goals>
            <goal>jar</goal>
          </goals>
      </execution>
      </executions>
  </plugin>


- To create Web app structure
mvn archetype:generate â€“DinteractiveMode=false
-DgroupId=com.packt.cookbook -DartifactId=simple-webapp
-DarchetypeArtifactId=maven-archetype-webapp

- mvn compiler:compile: This compiles the source files
- mvn compiler:testCompile: This compiles test files
- mvn  surefire:test: This runs tests
- mvn  jar:jar: This creates a JAR artifact

***
- The Maven Tomcat plugin supports the
  ability to build and deploy Maven projects in Tomcat.
- mvn org.apache.tomcat.maven:tomcat7-maven-plugin:run to run web app into tomcat

