<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.example</groupId>
  <artifactId>maven-cookbook-mastery</artifactId>
  <packaging>jar</packaging>
  <version>1.0.0-SNAPSHOT</version>
  <name>maven-cookbook-mastery</name>
  <url>http://maven.apache.org</url>
  <description>This description is written by abdallah samir ${developer.email}</description>
  <organization>
    <name>Special Organization</name>
    <url>http://www.anything.com</url>
  </organization>



  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <developer.email>abdallahsameer22@gmail.com</developer.email>
  </properties>


  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>3.8.1</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-text</artifactId>
      <version>1.11.0</version>
      <scope>compile</scope>
    </dependency>

  </dependencies>
  <reporting>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-javadoc-plugin</artifactId>
          <version>2.10.1</version>
<!--          here we choose only the documentation for the java code not for the test codes-->
          <reportSets>
            <reportSet>
              <reports>
                <report>javadoc</report>
              </reports>
            </reportSet>
          </reportSets>
        </plugin>
        <plugin>
<!--          This is used to generate the source code beside the javadocs -->
<!--          jxr plugin in reporting section is used to generate source code to the site-->
<!--          same as javadoc plugin we can generate the source code for the java only, not for the test-->
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jxr-plugin</artifactId>
          <version>2.5</version>
        </plugin>
      </plugins>
  </reporting>
  <build>

<!--    This is the final name of jar file-->
    <finalName>abdallah</finalName>
<!--    this will be instead of target, will be created, mvn clean will clean it-->
    <outputDirectory>ahmed</outputDirectory>
    <plugins>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>copy-dependencies</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <configuration>
          <archive>
            <manifest>
              <addClasspath>true</addClasspath>
              <mainClass>org.example.App</mainClass>
            </manifest>
          </archive>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <version>3.0.0</version>
        <configuration>
          <mainClass>org.example.App</mainClass>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.13.0</version>
        <configuration>
            <release>17</release>
        </configuration>
      </plugin>
     <plugin>
       <artifactId>maven-clean-plugin</artifactId>
       <version>3.2.0</version>
       <executions>
         <execution>
           <id>auto-clean</id>
<!--           <phase>initialize</phase>-->
           <goals>
             <goal>clean</goal>
           </goals>
         </execution>
       </executions>
<!--        here it will delete the directory abdallah under the basedir-->
<!--       we can determine list of file to be deleted when running clean goal -->
       <configuration>
         <filesets>
           <fileset>
             <directory>${project.basedir}/abdallah</directory>
           </fileset>
         </filesets>
       </configuration>
     </plugin>


    </plugins>
  </build>



  <profiles>
    <profile>
      <id>dev</id>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>
      <dependencies>
        <!-- https://mvnrepository.com/artifact/org.apache.commons/commons-text -->
<!--        <dependency>-->
<!--          <groupId>org.apache.commons</groupId>-->
<!--          <artifactId>commons-text</artifactId>-->
<!--          <version>1.11.0</version>-->
<!--        </dependency>-->
      </dependencies>
     <build>
       <plugins>
         <!-- https://mvnrepository.com/artifact/org.codehaus.mojo/exec-maven-plugin -->
         <plugin>
           <groupId>org.codehaus.mojo</groupId>
           <artifactId>exec-maven-plugin</artifactId>
           <version>3.0.0</version>
           <configuration>
             <mainClass>org.example.App</mainClass>
           </configuration>
         </plugin>
       </plugins>
     </build>
    </profile>
  </profiles>
</project>
